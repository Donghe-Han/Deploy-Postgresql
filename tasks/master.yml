---

- name: Add superuser
  postgresql_user:
    db: postgres
    name: "{{ superuser_username }}"
    password: "{{ superuser_password }}"
    encrypted: yes
    role_attr_flags: "SUPERUSER"
    login_unix_socket: "{{ postgresql_unix_socket_dir }}"
    port: "{{ postgresql_port }}"
    state: present
  become: yes
  become_user: postgres

- name: Create superuser databases
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ superuser_username }}"
    owner: "{{ superuser_username }}"
    login_unix_socket: "{{ postgresql_unix_socket_dir }}"
    port: "{{ postgresql_port }}"
    template: "postgres"
    state: present

- name: Add replication user
  postgresql_user:
    db: postgres
    name: "{{ replication_username }}"
    password: "{{ replication_password }}"
    encrypted: yes
    role_attr_flags: "LOGIN,REPLICATION"
    login_unix_socket: "{{ postgresql_unix_socket_dir }}"
    port: "{{ postgresql_port }}"
    state: present
  become: yes
  become_user: postgres

- name: Add trust in pg_hba.conf
  become_user: postgres
  lineinfile:
    state: present
    dest: "{{ postgresql_data_dir }}/pg_hba.conf"
    regexp: 'host.*replication.*{{ replica_ip }}/32.*trust'
    line: 'host    replication    {{ replication_username }}  {{replica_ip}}/32 trust'

- name: Add config in pg_hba.conf
  become_user: postgres
  lineinfile:
    state: present
    dest: "{{ postgresql_data_dir }}/pg_hba.conf"
    line: 'host    all             all             0.0.0.0/0               md5'
    insertafter: EOF

- name: Add postgres config directives
  become_user: postgres
  lineinfile:
    dest: "{{ postgresql_data_dir }}/postgresql.conf"
    line: "{{ item }}"
  with_items:
    - "{{ postgres_vars }}"

- name: restart postgresql
  systemd:
    name: "postgresql-{{postgresql_version}}"
    state: restarted
